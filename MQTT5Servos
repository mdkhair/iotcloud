#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Servo.h>

WiFiClient espClient;
PubSubClient client(espClient);
Servo servo1, servo2, servo3, servo4, servo5;

// Define Servo topics
const char* servo1Topic = "servo/1";
const char* servo2Topic = "servo/2";
const char* servo3Topic = "servo/3";
const char* servo4Topic = "servo/4";
const char* servo5Topic = "servo/5";

void reconnectmqttserver() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe(servo1Topic);
      client.subscribe(servo2Topic);
      client.subscribe(servo3Topic);
      client.subscribe(servo4Topic);
      client.subscribe(servo5Topic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void callback(char* topic, byte* payload, unsigned int length) {
  String MQTT_DATA = "";
  for (int i = 0; i < length; i++) {
    MQTT_DATA += (char)payload[i];
  }

  if (String(topic) == servo1Topic) {
    int angle = MQTT_DATA.toInt();
    controlServo(servo1, angle);
  } else if (String(topic) == servo2Topic) {
    int angle = MQTT_DATA.toInt();
    controlServo(servo2, angle);
  } else if (String(topic) == servo3Topic) {
    int angle = MQTT_DATA.toInt();
    controlServo(servo3, angle);
  } else if (String(topic) == servo4Topic) {
    int angle = MQTT_DATA.toInt();
    controlServo(servo4, angle);
  } else if (String(topic) == servo5Topic) {
    int angle = MQTT_DATA.toInt();
    controlServo(servo5, angle);
  }
}

void controlServo(Servo& servo, int angle) {
  Serial.println("Setting Servo Angle: " + String(angle));
  servo.write(angle);
}

void setup() {
  Serial.begin(9600);
  WiFi.disconnect();
  delay(1000);
  Serial.println("START");
  WiFi.begin("5G_CPE_UTM", "123456789");
  while ((!(WiFi.status() == WL_CONNECTED))) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to:");
  Serial.println((WiFi.localIP().toString()));
  client.setServer("broker.hivemq.com", 1883);
  client.setCallback(callback);

  servo1.attach(D2); // Attach servos to respective pins
  servo2.attach(D3);
  servo3.attach(D4);
  servo4.attach(D5);
  servo5.attach(D6);

  // Additional setup for servo motors
  servo1.write(90); // Set initial positions
  servo2.write(90);
  servo3.write(90);
  servo4.write(90);
  servo5.write(90);

}

void loop() {
  if (!client.connected()) {
    reconnectmqttserver();
  }
  client.loop();
}
