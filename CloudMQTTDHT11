#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>

// Replace with your Wi-Fi credentials
const char* ssid = "5G_CPE_UTM";
const char* password = "123456789";

// MQTT broker details
const char* mqttServer = "broker.hivemq.com";
const int mqttPort = 1883;

// Define your DHT sensor type and pin
#define DHTPIN D2 // Use the appropriate pin where your DHT11 is connected
#define DHTTYPE DHT11

WiFiClient espClient;
PubSubClient client(espClient);
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Set up MQTT client
  client.setServer(mqttServer, mqttPort);
  // If your MQTT broker requires authentication, set the username and password here
  // client.setCredentials(mqttUser, mqttPassword);

  dht.begin();
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }

  client.loop();

  // Read data from DHT11
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  if (!isnan(temperature) && !isnan(humidity)) {
    // Publish temperature to MQTT topic
    client.publish("mydht11/temperature", String(temperature).c_str());

    // Publish humidity to MQTT topic
    client.publish("mydht11/humidity", String(humidity).c_str());
  }

  delay(5000); // Adjust the delay to publish data at your desired interval
}

void reconnect() {
  while (!client.connected()) {
    Serial.println("Attempting MQTT connection...");
    if (client.connect("ESP8266Client")) {
      Serial.println("Connected to MQTT broker");
    } else {
      Serial.print("Failed, rc=");
      Serial.print(client.state());
      Serial.println(" Try again in 5 seconds");
      delay(5000);
    }
  }
}
