#include <ESP8266WiFi.h>
#include <PubSubClient.h>

const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";
const char* mqttBroker = "broker.hivemq.com"; // Replace with your MQTT broker IP or hostname
const int mqttPort = 1883;

WiFiClient espClient;
PubSubClient client(espClient);

const int ledPin = D4; // Change this to the GPIO pin where your LED is connected
const char* ledTopic = "ledControl"; // Change this to your desired topic

void reconnectMqttServer() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      client.subscribe(ledTopic);
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void callback(char* topic, byte* payload, unsigned int length) {
  String mqttData = "";
  for (int i = 0; i < length; i++) {
    mqttData += (char)payload[i];
  }

  if (String(topic) == ledTopic) {
    controlLED(mqttData);
  }
}

void controlLED(String payload) {
  if (payload == "on") {
    Serial.println("Turning ON the LED");
    digitalWrite(ledPin, HIGH);
  } else if (payload == "off") {
    Serial.println("Turning OFF the LED");
    digitalWrite(ledPin, LOW);
  }
}

void setup() {
  Serial.begin(9600);
  WiFi.disconnect();
  delay(1000);
  Serial.println("START");
  WiFi.begin(ssid, password); // Connect to WiFi using global SSID and password
  while (!(WiFi.status() == WL_CONNECTED)) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to:");
  Serial.println((WiFi.localIP().toString()));

  client.setServer(mqttBroker, mqttPort); // Connect to MQTT broker using global broker details
  client.setCallback(callback);

  pinMode(ledPin, OUTPUT);
}

void loop() {
  if (!client.connected()) {
    reconnectMqttServer();
  }
  client.loop();
}
